Searching 46 files for "folderId"

/Users/ruiqili/Documents/Github/Jupiter/AutoTestNew/web/js/bundle.js:
  147  	propTypes: {
  148  		editTitle: ReactPropTypes.string.isRequired,
  149: 		selectFolderId: ReactPropTypes.string.isRequired
  150  	},
  151  	contextTypes: {
  ...
  170  	},
  171  	_onCancelClicked: function (event) {
  172: 		this.context.router.transitionTo('dashboard', {section_id: 'script'}, {select_folder: this.props.selectFolderId});
  173  	},
  174  	_onSubmitClicked: function (event) {
  175  		Dispatcher.updateFolder({
  176: 			folder: this.props.selectFolderId,
  177  			title: this.state.editTitle
  178  		});
  179: 		this.context.router.transitionTo('dashboard', {section_id: 'script'}, {select_folder: this.props.selectFolderId});
  180  	},
  181  
  ...
  394  
  395  	propTypes: {
  396: 		selectFolderId: ReactPropTypes.string,
  397  		folders: ReactPropTypes.array
  398  	},
  ...
  414  						key: folder.id, 
  415  						folder: folder, 
  416: 						select: props.selectFolderId == folder.id})
  417  				);
  418  			});
  ...
 2389  										folders: data.folders, 
 2390  										scripts: data.scripts, 
 2391: 										selectFolderId: query.select_folder, 
 2392  										editTitle: query.editTitle}));
 2393  				}
 ....
 2881  		folders: ReactPropTypes.array,
 2882  		scripts: ReactPropTypes.array,
 2883: 		selectFolderId: ReactPropTypes.string,
 2884  		editTitle: ReactPropTypes.string,
 2885  		searchText: ReactPropTypes.string
 ....
 2888  	render: function () {
 2889  		var props = this.props,
 2890: 			selectFolderId = props.selectFolderId,
 2891  			selectFolder,
 2892  			consoleView;
 2893  
 2894: 		if (props.folders && props.selectFolderId) {
 2895: 			var index = findArrayIndex(props.folders, props.selectFolderId);
 2896  			selectFolder = props.folders[index];
 2897  		}
 2898  
 2899: 		if (props.editTitle && selectFolderId) {
 2900: 			consoleView = React.createElement(EditConsole, {selectFolderId: selectFolderId, editTitle: props.editTitle});
 2901: 		} else if (selectFolderId) {
 2902  			consoleView = React.createElement(SearchConsole, {selectFolder: selectFolder, searchText: props.searchText});
 2903  		} else {
 ....
 2909  				React.createElement("div", {className: "col-sm-3 col-sm-offset-1"}, 
 2910  					React.createElement(FolderHeader, null), 
 2911: 					React.createElement(FolderList, {folders: props.folders, selectFolderId: selectFolderId})
 2912  				), 
 2913  				React.createElement("div", {className: "col-sm-7"}, 

/Users/ruiqili/Documents/Github/Jupiter/AutoTestNew/web/js/components/folder-console/edit.react.js:
    7  	propTypes: {
    8  		editTitle: ReactPropTypes.string.isRequired,
    9: 		selectFolderId: ReactPropTypes.string.isRequired
   10  	},
   11  	contextTypes: {
   ..
   30  	},
   31  	_onCancelClicked: function (event) {
   32: 		this.context.router.transitionTo('dashboard', {section_id: 'script'}, {select_folder: this.props.selectFolderId});
   33  	},
   34  	_onSubmitClicked: function (event) {
   35  		Dispatcher.updateFolder({
   36: 			folder: this.props.selectFolderId,
   37  			title: this.state.editTitle
   38  		});
   39: 		this.context.router.transitionTo('dashboard', {section_id: 'script'}, {select_folder: this.props.selectFolderId});
   40  	},
   41  

/Users/ruiqili/Documents/Github/Jupiter/AutoTestNew/web/js/components/folder-console/folder-console.react.js:
    5  var FolderConsole = React.createClass({
    6  	propTypes: {
    7: 		selectFolderId: React.PropTypes.string
    8  	},
    9  	getInitialState: function () {
   ..
   36  	},
   37  	componentWillReceiveProps: function (nextProps) {
   38: 		if (nextProps.selectFolderId != this.props.selectFolderId) {
   39  			this.setState({ searchText: '' });
   40  		}

/Users/ruiqili/Documents/Github/Jupiter/AutoTestNew/web/js/components/folder-list/folder-list.react.js:
    6  
    7  	propTypes: {
    8: 		selectFolderId: ReactPropTypes.string,
    9  		folders: ReactPropTypes.array
   10  	},
   ..
   26  						key={folder.id}
   27  						folder={folder}
   28: 						select={props.selectFolderId == folder.id}/>
   29  				);
   30  			});

/Users/ruiqili/Documents/Github/Jupiter/AutoTestNew/web/js/pages/dashboard.react.js:
  111  										folders={data.folders}
  112  										scripts={data.scripts}
  113: 										selectFolderId={query.select_folder}
  114  										editTitle={query.editTitle}/>);
  115  				}

/Users/ruiqili/Documents/Github/Jupiter/AutoTestNew/web/js/pages/section-script.react.js:
   21  		folders: ReactPropTypes.array,
   22  		scripts: ReactPropTypes.array,
   23: 		selectFolderId: ReactPropTypes.string,
   24  		editTitle: ReactPropTypes.string,
   25  		searchText: ReactPropTypes.string
   ..
   28  	render: function () {
   29  		var props = this.props,
   30: 			selectFolderId = props.selectFolderId,
   31  			selectFolder,
   32  			consoleView;
   33  
   34: 		if (props.folders && props.selectFolderId) {
   35: 			var index = findArrayIndex(props.folders, props.selectFolderId);
   36  			selectFolder = props.folders[index];
   37  		}
   38  
   39: 		if (props.editTitle && selectFolderId) {
   40: 			consoleView = <EditConsole selectFolderId={selectFolderId} editTitle={props.editTitle}/>;
   41: 		} else if (selectFolderId) {
   42  			consoleView = <SearchConsole selectFolder={selectFolder} searchText={props.searchText}/>;
   43  		} else {
   ..
   49  				<div className='col-sm-3 col-sm-offset-1'>
   50  					<FolderHeader/>
   51: 					<FolderList folders={props.folders} selectFolderId={selectFolderId}/>
   52  				</div>
   53  				<div className='col-sm-7'>

39 matches across 6 files
